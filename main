-- script outdated
-- I would be happy for credits

local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage") 
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer


local Window = WindUI:CreateWindow({
    Title = "XYLO",
    Icon = "rbxassetid://74692184889464",
    Author = "Ink Game",
    Folder = "MySuperHub",
    
    -- ↓ This all is Optional. You can remove it.
    Size = UDim2.fromOffset(480, 360),
    Transparent = false,
    Theme = "Dark",
    Resizable = true,
    SideBarWidth = 200,
    BackgroundImageTransparency = 1,
    HideSearchBar = true,
    ScrollBarEnabled = false,
    
    -- ↓ Optional. You can remove it.
    --[[ You can set 'rbxassetid://' or video to Background.
        'rbxassetid://':
            Background = "rbxassetid://", -- rbxassetid
        Video:
            Background = "video:YOUR-RAW-LINK-TO-VIDEO.webm", -- video 
    --]]
    
    -- ↓ Optional. You can remove it.
    User = {
        Enabled = false,
        Anonymous = false,
        Callback = function()
            print("clicked")
        end,
    },
    
    -- !  ↓  remove this all, 
    -- !  ↓  if you DON'T need the key system
    KeySystem = { 
        -- ↓ Optional. You can remove it.
        Key = { "XYLO-9F4T-Q7LM-2V8R","noschistsigma" },
        
        Note = "Get the key from the discord server!",
        
        -- ↓ Optional. You can remove it.
        Thumbnail = {
            Image = "rbxassetid://74692184889464",
            Title = "XYLO",
        },
        
        -- ↓ Optional. You can remove it.
        URL = "https://discord.gg/4cB8Djgauv",
        
        -- ↓ Optional. You can remove it.
        SaveKey = true, -- automatically save and load the key.
        
        -- ↓ Optional. You can remove it.
        -- API = {} ← Services. Read about it below ↓
    },
})

WindUI:Notify({
    Title = "Welcome!",
    Content = "The key was valid! Enjoy!",
    Duration = 3, -- 3 seconds
    Icon = "wave",
})

Window:EditOpenButton({
    Title = "Open XYLO HUB",
    Icon = "pointer",
    CornerRadius = UDim.new(0, 6),
    StrokeThickness = 2,
    Color = ColorSequence.new(Color3.fromRGB(139, 0, 0), Color3.fromRGB(255, 102, 102)),
    Draggable = true,
})

Window:Tag({
    Title = "FREE",
    Color = Color3.fromHex("#30ff6a")
})

local RedlightTab = Window:Tab({
    Title = "Redlight",
    Icon = "lamp",
    Locked = false,
})

local DalgonaTab = Window:Tab({
    Title = "Dalgona",
    Icon = "cookie",
    Locked = false,
})

local LightsoutTab = Window:Tab({
    Title = "Lightsout",
    Icon = "fork",
    Locked = false,
})

local HideTab = Window:Tab({
    Title = "Hide and Seek",
    Icon = "sword",
    Locked = false,
})

local TugTab = Window:Tab({
    Title = "Tug of War",
    Icon = "circle",
    Locked = false,
})

local RopeTab = Window:Tab({
    Title = "Jump Rope",
    Icon = "line",
    Locked = false,
})

local GlassTab = Window:Tab({
    Title = "Glass Bridge",
    Icon = "square",
    Locked = false,
})

local MingleTab = Window:Tab({
    Title = "Mingle",
    Icon = "carousel",
    Locked = false,
})

local FinalTab = Window:Tab({
    Title = "Final",
    Icon = "fish",
    Locked = false,
})

local MiscTab = Window:Tab({
    Title = "MISC",
    Icon = "user",
    Locked = false,
})

local TeleportTab = Window:Tab({
    Title = "Teleports",
    Icon = "circle",
    Locked = false,
})

local Button = RedlightTab:Button({
    Title = "TP to end",
    Desc = "Teleport to the end of Redlight",
    Locked = false,
    Callback = function()
        -- Character sicher holen
        local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
        
        if workspace:FindFirstChild("RedLightGreenLight") and 
           workspace.RedLightGreenLight:FindFirstChild("sand") and 
           workspace.RedLightGreenLight.sand:FindFirstChild("crossedover") then
            
            local pos = workspace.RedLightGreenLight.sand.crossedover.Position + Vector3.new(0, 5, 0)
            humanoidRootPart.CFrame = CFrame.new(pos, pos + Vector3.new(0, 0, -1))
        end
    end
})

local Toggle = RedlightTab:Toggle({
    Title = "Auto help players",
    Desc = "Automatically helps players in Redlight",
    Icon = "circle",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)  -- ✅ state Parameter hinzufügen
        _G.AutoHelpPlayer = state
        
        while _G.AutoHelpPlayer do
            -- Character sicher holen
            local character = LocalPlayer.Character
            if not character then
                task.wait(0.5)
                continue
            end
            
            local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
            if not humanoidRootPart then
                task.wait(0.5)
                continue
            end
            
            for _, v in pairs(Players:GetPlayers()) do
                if v ~= LocalPlayer and v.Character and v.Character:FindFirstChild("HumanoidRootPart") and 
                   v.Character.HumanoidRootPart:FindFirstChild("CarryPrompt") and 
                   v.Character.HumanoidRootPart.CarryPrompt.Enabled == true then
                    
                    if v.Character:FindFirstChild("SafeRedLightGreenLight") == nil then
                        humanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame
                        task.wait(0.3)
                        
                        repeat 
                            task.wait(0.1)
                            fireproximityprompt(v.Character.HumanoidRootPart:FindFirstChild("CarryPrompt"))
                        until not v.Character.HumanoidRootPart.CarryPrompt.Enabled
                        
                        task.wait(0.5)
                        if workspace:FindFirstChild("RedLightGreenLight") then
                            humanoidRootPart.CFrame = CFrame.new(-75, 1025, 143)
                        end
                        
                        task.wait(0.4)
                        ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("ClickedButton"):FireServer({tryingtoleave = true})
                        break
                    end
                end
            end
            task.wait()
        end
    end
})

local Toggle = LightsoutTab:Toggle({
    Title = "Kill Aura",
    Desc = "You still need to click",
    Icon = "circle",
    Type = "Checkbox",
    Default = false,
    Callback = function(state) 
        _G.AutoTeleportHide = state
        
        while _G.AutoTeleportHide do
            local localPlayer = game.Players.LocalPlayer
            local localCharacter = localPlayer.Character
            local localHRP = localCharacter and localCharacter:FindFirstChild("HumanoidRootPart")
            
            if not localHRP then
                task.wait(0.5)
                continue
            end
            
            for _, v in pairs(game.Players:GetPlayers()) do
                if v ~= localPlayer and v.Character then
                    local targetHRP = v.Character:FindFirstChild("HumanoidRootPart")
                    local targetHumanoid = v.Character:FindFirstChild("Humanoid")
                    
                    if targetHRP and targetHumanoid and targetHumanoid.Health > 0 then
                        -- Folgt ALLEN Spielern (außer sich selbst)
                        if targetHumanoid.MoveDirection.Magnitude > 0 then
                            -- Mit Abstand folgen wenn Spieler sich bewegt
                            localHRP.CFrame = targetHRP.CFrame * CFrame.new(0, 0, -7)
                        else
                            -- Direkt folgen wenn Spieler stillsteht
                            localHRP.CFrame = targetHRP.CFrame
                        end
                        break  -- Nur einem Spieler folgen
                    end
                end
            end
            task.wait(0.1)  -- Kurze Pause für Performance
        end
    end
})

local Toggle = LightsoutTab:Toggle({
    Title = "Teleport to safe place",
    Desc = "teleports you to the safe place in lightsout",
    Locked = false,
    Callback = function(State)
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
        
        -- Koordinaten für den sicheren Ort (anpassen nach Bedarf)
        local lifgtsoutPos = CFrame.new(200, 130, -136) -- Beispiel-Koordinaten
        
        if State then
            -- Speichere die aktuelle Position als LightsoutSafePlacePos
            Toggle.LightsoutSafePlacePos = humanoidRootPart.CFrame
            
            -- Teleportiere zum sicheren Ort
            humanoidRootPart.CFrame = lifgtsoutPos
        else
            -- Teleportiere zurück zur ursprünglichen Position (LightsoutSafePlacePos)
            if Toggle.LightsoutSafePlacePos then
                humanoidRootPart.CFrame = Toggle.LightsoutSafePlacePos
            else
                -- Fallback, falls keine Position gespeichert wurde
                humanoidRootPart.CFrame = CFrame.new(200, 120, -136)
            end
        end
    end
})

local Toggle = HideTab:Toggle({
    Title = "ESP Hider & Seeker",
    Desc = "See hiders and seekers",
    Icon = "circle",
    Type = "Checkbox",
    Default = false,
    Callback = function(state) 
        _G.SeekPlayer = state
        
        if _G.SeekPlayer == false then
            for i, v in pairs(game.Players:GetChildren()) do
                if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("Head") then
                    for i, n in pairs(v.Character.Head:GetChildren()) do
                        if n.Name:find("Esp_") then
                            n:Destroy()
                        end
                    end
                end
            end
        else
            -- Starte die ESP-Schleife wenn aktiviert
            coroutine.wrap(function()
                while _G.SeekPlayer do
                    for i, v in pairs(game.Players:GetChildren()) do
                        if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("Head") and v.Character:FindFirstChild("HumanoidRootPart") and v.Character:FindFirstChild("Humanoid") then
                            
                            -- Bestimme die Farbe basierend auf der Rolle
                            local isHunter = v:GetAttribute("IsHunter")
                            local highlightColor, textColor
                            
                            if isHunter then
                                highlightColor = Color3.fromRGB(255, 0, 0)  -- Rot für Seeker/Jäger
                                textColor = Color3.fromRGB(255, 100, 100)   -- Hellrot für Text
                            else
                                highlightColor = Color3.fromRGB(0, 0, 255)  -- Blau für Hider
                                textColor = Color3.fromRGB(100, 100, 255)   -- Hellblau für Text
                            end
                            
                            -- Entferne vorhandene ESP-Elemente
                            for i, n in pairs(v.Character.Head:GetChildren()) do
                                if n.Name:find("Esp_") then
                                    n:Destroy()
                                end
                            end
                            
                            -- Highlight für beide Rollen
                            local existingHighlight = v.Character.Head:FindFirstChild("Esp_Highlight1")
                            if not existingHighlight then
                                local Highlight = Instance.new("Highlight")
                                Highlight.Name = "Esp_Highlight1"
                                Highlight.FillColor = highlightColor
                                Highlight.OutlineColor = highlightColor
                                Highlight.FillTransparency = 0.5
                                Highlight.OutlineTransparency = 0
                                Highlight.Adornee = v.Character
                                Highlight.Parent = v.Character.Head
                            else
                                existingHighlight.FillColor = highlightColor
                                existingHighlight.OutlineColor = highlightColor
                            end
                            
                            -- GUI für beide Rollen
                            local existingGui = v.Character.Head:FindFirstChild("Esp_Gui1")
                            if not existingGui then
                                local GuiPlayerEsp = Instance.new("BillboardGui", v.Character.Head)
                                GuiPlayerEsp.Adornee = v.Character.Head
                                GuiPlayerEsp.Name = "Esp_Gui1"
                                GuiPlayerEsp.Size = UDim2.new(0, 100, 0, 150)
                                GuiPlayerEsp.AlwaysOnTop = true
                                GuiPlayerEsp.StudsOffset = Vector3.new(0, 3, 0)
                                
                                local GuiPlayerEspText = Instance.new("TextLabel", GuiPlayerEsp)
                                GuiPlayerEspText.BackgroundTransparency = 1
                                GuiPlayerEspText.Name = "TextLabel"
                                GuiPlayerEspText.Font = Enum.Font.Code
                                GuiPlayerEspText.Size = UDim2.new(0, 100, 0, 100)
                                GuiPlayerEspText.TextSize = 15
                                GuiPlayerEspText.TextColor3 = textColor
                                GuiPlayerEspText.TextStrokeTransparency = 0.5
                                
                                local UIStroke = Instance.new("UIStroke")
                                UIStroke.Color = Color3.new(0, 0, 0)
                                UIStroke.Thickness = 1.5
                                UIStroke.Parent = GuiPlayerEspText
                            end
                            
                            -- Aktualisiere den Text
                            if v.Character.Head:FindFirstChild("Esp_Gui1") and v.Character.Head["Esp_Gui1"]:FindFirstChild("TextLabel") then
                                local roleText = isHunter and " (Seeker)" or " (Hider)"
                                v.Character.Head["Esp_Gui1"].TextLabel.Text = v.Name..roleText..
                                    "\nDistance ("..string.format("%.1f", (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).Magnitude).."m)"
                                v.Character.Head["Esp_Gui1"].TextLabel.TextColor3 = textColor
                            end
                        end
                    end
                    task.wait(0.2) -- Etwas längeres Wait für bessere Performance
                end
            end)()
        end
    end
})


local Toggle = HideTab:Toggle({
    Title = "ESP Keys",
    Desc = "See dropped keys",
    Icon = "circle",
    Type = "Checkbox",
    Default = false,
    Callback = function(state) 
        _G.DoorKey = state
        
        if _G.DoorKey == false then
            for _, a in pairs(workspace.Effects:GetChildren()) do
                if a.Name:find("DroppedKey") and a:FindFirstChild("Handle") then
                    for _, v in pairs(a:FindFirstChild("Handle"):GetChildren()) do
                        if v.Name:find("Esp_") then
                            v:Destroy()
                        end
                    end
                end
            end
        else
            -- Starte die ESP-Schleife für Keys
            coroutine.wrap(function()
                while _G.DoorKey do
                    for _, a in pairs(workspace.Effects:GetChildren()) do
                        if a.Name:find("DroppedKey") and a:FindFirstChild("Handle") then 
                            
                            -- Entferne vorhandene ESP-Elemente
                            for _, v in pairs(a.Handle:GetChildren()) do
                                if v.Name:find("Esp_") then
                                    v:Destroy()
                                end
                            end
                            
                            -- Highlight für Keys (Grün für gute Sichtbarkeit)
                            local existingHighlight = a.Handle:FindFirstChild("Esp_Highlight")
                            if not existingHighlight then
                                local Highlight = Instance.new("Highlight")
                                Highlight.Name = "Esp_Highlight"
                                Highlight.FillColor = Color3.fromRGB(0, 255, 0) -- Grün für Keys
                                Highlight.OutlineColor = Color3.fromRGB(0, 200, 0) 
                                Highlight.FillTransparency = 0.3
                                Highlight.OutlineTransparency = 0
                                Highlight.Adornee = a
                                Highlight.Parent = a.Handle
                            end
                            
                            -- GUI für Keys
                            local existingGui = a.Handle:FindFirstChild("Esp_Gui")
                            if not existingGui then
                                local GuiPlayerEsp = Instance.new("BillboardGui", a.Handle)
                                GuiPlayerEsp.Adornee = a.Handle
                                GuiPlayerEsp.Name = "Esp_Gui"
                                GuiPlayerEsp.Size = UDim2.new(0, 100, 0, 150)
                                GuiPlayerEsp.AlwaysOnTop = true
                                GuiPlayerEsp.StudsOffset = Vector3.new(0, 2, 0)
                                
                                local GuiPlayerEspText = Instance.new("TextLabel", GuiPlayerEsp)
                                GuiPlayerEspText.BackgroundTransparency = 1
                                GuiPlayerEspText.Name = "TextLabel"
                                GuiPlayerEspText.Font = Enum.Font.Code
                                GuiPlayerEspText.Size = UDim2.new(0, 100, 0, 100)
                                GuiPlayerEspText.TextSize = 14
                                GuiPlayerEspText.TextColor3 = Color3.fromRGB(200, 255, 200) -- Hellgrün für Text
                                GuiPlayerEspText.TextStrokeTransparency = 0.5
                                GuiPlayerEspText.Text = "Key"
                                
                                local UIStroke = Instance.new("UIStroke")
                                UIStroke.Color = Color3.new(0, 0, 0)
                                UIStroke.Thickness = 1.5
                                UIStroke.Parent = GuiPlayerEspText
                            end
                            
                            -- Aktualisiere den Text mit Entfernungsangabe
                            if a.Handle:FindFirstChild("Esp_Gui") and a.Handle["Esp_Gui"]:FindFirstChild("TextLabel") then
                                a.Handle["Esp_Gui"].TextLabel.Text = "Key\nDistance ("..string.format("%.1f", (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - a.Handle.Position).Magnitude).."m)"
                            end
                        end
                    end
                    task.wait(0.3) -- Etwas längeres Wait für bessere Performance
                end
            end)()
        end
    end
})

local Toggle = HideTab:Toggle({
    Title = "Autokill hiders",
    Desc = "Still have to click",
    Icon = "circle",
    Type = "Checkbox",
    Default = false,
    Callback = function(state) 
        _G.AutoTeleportHide = state
        while _G.AutoTeleportHide do
            for i, v in pairs(game.Players:GetChildren()) do
                if v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("Head") and v.Character:FindFirstChild("HumanoidRootPart") and v.Character:FindFirstChild("Humanoid") then
                    -- Prüfe ob der Gegner tot ist (Health <= 0)
                    if v:GetAttribute("IsHider") and v.Character.Humanoid.Health > 0 then
                        if v.Character:FindFirstChild("Humanoid") and v.Character.Humanoid.MoveDirection.Magnitude > 0 then
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Character:FindFirstChild("HumanoidRootPart").CFrame * CFrame.new(0, 0, -7)
                        else
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Character:FindFirstChild("HumanoidRootPart").CFrame
                        end
                        break
                    end
                end
            end
            task.wait()
        end
    end
})

local Button = HideTab:Button({
    Title = "Collect all keys (BETA)",
    Desc = "Collect all dropped keys in hide and seek",
    Locked = false,
    Callback = function()
        local OldCFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
        for _, a in pairs(workspace.Effects:GetChildren()) do
            if a.Name:find("DroppedKey") and a:FindFirstChild("Handle") then
                if game.Players.LocalPlayer.Character:FindFirstChild("Head") and 
                   game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and 
                   game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
                    if game.Players.LocalPlayer:GetAttribute("IsHider") and 
                       game.Players.LocalPlayer.Character.Humanoid.Health > 0 then
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = a:FindFirstChild("Handle").CFrame
                        task.wait(0.5)
                    end
                end
            end
        end
        if game.Players.LocalPlayer.Character:FindFirstChild("Head") and 
           game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = OldCFrame
        end
    end
})

local Button = TeleportTab:Button({
    Title = "Safe place",
    Desc = "Teleport to a safe place",
    Locked = false,
    Callback = function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-237, 328, 438)
    end
})


local Button = TeleportTab:Button({
    Title = "Dalgona entrance",
    Desc = "Teleport to the entrance of Dalgona",
    Locked = false,
    Callback = function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-229, 230, 407)
    end
})

local Button = TeleportTab:Button({
    Title = "Hide and Seek/Tug of War entrance",
    Desc = "Teleport to the entrance of Hide and Seek/Tug of War",
    Locked = false,
    Callback = function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-465, 245, 448)
    end
})

local Button = TeleportTab:Button({
    Title = "Jump Rope entrance",
    Desc = "Teleport to the entrance of Jump Rope",
    Locked = false,
    Callback = function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-432, 245, 505)
    end
})

local Button = TeleportTab:Button({
    Title = "Glass Bridge entrance",
    Desc = "Teleport to the entrance of Glass Bridge",
    Locked = false,
    Callback = function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-378, 259, 483)
    end
})

local Button = TeleportTab:Button({
    Title = "Mingle entrance",
    Desc = "Teleport to the entrance of Mingle",
    Locked = false,
    Callback = function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-383, 288, 444)
    end
})

local Button = TeleportTab:Button({
    Title = "Final entrance",
    Desc = "Teleport to the entrance of the Final",
    Locked = false,
    Callback = function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-431, 252, 783)
    end
})

local Button = RopeTab:Button({
    Title = "Delete Rope",
    Desc = "Deletes the rope in jump rope",
    Locked = false,
    Callback = function()
        -- Suche nach dem Rope-Objekt
        local effectsFolder = game.Workspace:FindFirstChild("Effects")
        if effectsFolder then
            local rope = effectsFolder:FindFirstChild("rope")
            if rope then
                rope:Destroy()
                print("Rope deleted!")
            else
                print("Rope not found")
            end
        else
            print("Folder not found")
        end
    end
})

local Button = RopeTab:Button({
    Title = "Repair bridge",
    Desc = "removes the hole in the bridge",
    Locked = false,
    Callback = function()
    
        -- Altes Safe Part entfernen
        local oldPart = workspace:FindFirstChild("SafePlatform")
        if oldPart then
            oldPart:Destroy()
        end
        
        -- Neues Safe Part erstellen
        local safePart = Instance.new("Part")
        safePart.Name = "SafePlatform"
        safePart.Size = Vector3.new(5, 1, 5)
        safePart.Position = Vector3.new(677, 194, 921)
        safePart.Anchored = true
        safePart.CanCollide = true
        safePart.Parent = workspace
        
        print("✅ Safe platform created at 677, 194, 921")
    end
})

local Button = RopeTab:Button({
    Title = "Complete Jump Rope",
    Desc = "Teleports you to the end of jump rope",
    Locked = false,
    Callback = function()
        if workspace:WaitForChild("JumpRope") then
            local pos = workspace.JumpRope.Important.Model.LEGS.Position
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(pos, pos + Vector3.new(0, 0, -1))
        end
    end
})

local Button = GlassTab:Button({
    Title = "Complete Glass Bridge",
    Desc = "Teleports you to the end of glass bridge",
    Locked = false,
    Callback = function()
    if workspace:WaitForChild("GlassBridge") then
local pos = workspace.GlassBridge.End.PrimaryPart.Position + Vector3.new(0, 8, 0)
Player.Character.HumanoidRootPart.CFrame = CFrame.new(pos, pos + Vector3.new(0, 0, -1))
end
    end
})

local Toggle = GlassTab:Toggle({
    Title = "Glass ESP",
    Desc = "See which glasses are safe",
    Icon = "circle",
    Type = "Checkbox",
    Default = false,
    Callback = function(state) 
    local GlassHolder = workspace:WaitForChild("GlassBridge"):WaitForChild("GlassHolder")
for i, v in pairs(GlassHolder:GetChildren()) do
    for k, j in pairs(v:GetChildren()) do
        if j:IsA("Model") and j.PrimaryPart then
            local Color = j.PrimaryPart:GetAttribute("exploitingisevil") and Color3.fromRGB(248, 87, 87) or Color3.fromRGB(28, 235, 87)
            j.PrimaryPart.Color = Color
            j.PrimaryPart.Transparency = 0
            j.PrimaryPart.Material = Enum.Material.Neon
        end
    end
end
    end
})

local Toggle = MingleTab:Toggle({
    Title = "Auto choke",
    Desc = "Auto power hold",
    Icon = "circle",
    Type = "Checkbox",
    Default = false,
    Callback = function(state) 
    _G.AutoMingle = Value
while _G.AutoMingle do
for i, v in ipairs(game.Players.LocalPlayer.Character:GetChildren()) do
	if v.Name == "RemoteForQTE" then
        v:FireServer()
    end
end
task.wait()
end
    end
})

local Toggle = TugTab:Toggle({
    Title = "Auto Tug of War (BETA)",
    Desc = "Automatically presses the buttons in Tug of War",
    Icon = "circle",
    Type = "Checkbox",
    Default = false,
    Callback = function(state) 
    _G.TugOfWar = Value
while _G.TugOfWar do
game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("TemporaryReachedBindable"):FireServer({GameQTE = true})
task.wait()
end
    end
})

local Toggle = MiscTab:Toggle({
    Title = "Noclip",
    Desc = "Walk through walls",
    Icon = "circle",
    Type = "Checkbox",
    Default = false,
    Callback = function(state) 
        _G.NoclipCharacter = state
        
        -- Noclip deaktivieren
        if state == false then
            if game.Players.LocalPlayer.Character ~= nil then
                for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                    if v:IsA("BasePart") and v.CanCollide == false then
                        v.CanCollide = true
                    end
                end
            end
            return
        end
        
        -- Noclip aktivieren (Loop)
        while _G.NoclipCharacter and task.wait() do
            if game.Players.LocalPlayer.Character ~= nil then
                for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
                    if v:IsA("BasePart") then
                        v.CanCollide = false
                    end
                end
            end
        end
    end
})

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

-- Variablen für Character-Referenzen
local Character, HRP, Humanoid

-- Initialsetup
local function setupCharacter()
    Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    HRP = Character:WaitForChild("HumanoidRootPart")
    Humanoid = Character:WaitForChild("Humanoid")
end

setupCharacter()

local SpeedMultiplier = 1.0

-- // Slider Setup \\ --
local Slider = MiscTab:Slider({
    Title = "Walkspeed (BETA)",
    
    -- Float-Schritte für genauere Kontrolle
    Step = 0.1,
    
    Value = {
        Min = 1.0,
        Max = 20.0,
        Default = 1.0,
    },
    Callback = function(value)
        SpeedMultiplier = value
        print("Walkspeed Multiplier:", value)
    end
})

-- // Bewegung per RenderStepped \\ --
RunService.RenderStepped:Connect(function(dt)
    if Humanoid and HRP and SpeedMultiplier > 1 and Humanoid.MoveDirection.Magnitude > 0 then
        local moveDir = Humanoid.MoveDirection.Unit
        local extraSpeed = Humanoid.WalkSpeed * (SpeedMultiplier - 1)
        HRP.CFrame = HRP.CFrame + (moveDir * extraSpeed * dt)
    end
end)

-- // Fix nach Respawn \\ --
LocalPlayer.CharacterAdded:Connect(function(char)
    Character = char
    HRP = char:WaitForChild("HumanoidRootPart")
    Humanoid = char:WaitForChild("Humanoid")
end)

local Toggle = MiscTab:Toggle({
    Title = "Double Jump",
    Desc = "You can jump multiple times in the air",
    Icon = "circle",
    Type = "Checkbox",
    Default = false,
    Callback = function(state) 
        print("Protection Box Activated: " .. tostring(state))
        
        if state then
            -- Erstelle die schützende Box um den Spieler
            local Players = game:GetService("Players")
            local player = Players.LocalPlayer
            local character = player.Character
            
            if not character or not character:FindFirstChild("HumanoidRootPart") then
                return
            end
            
            -- Box-Eigenschaften
            local boxSize = 8
            local wallThickness = 0.5
            local boxColor = Color3.fromRGB(255, 0, 0)
            
            -- Tabelle für alle Wände
            local walls = {}
            
            -- Erstelle die 6 Wände für eine Box
            local wallPositions = {
                Vector3.new(0, 0, boxSize/2),   -- Vorne
                Vector3.new(0, 0, -boxSize/2),  -- Hinten
                Vector3.new(boxSize/2, 0, 0),   -- Rechts
                Vector3.new(-boxSize/2, 0, 0),  -- Links
                Vector3.new(0, boxSize/2, 0),   -- Oben
                Vector3.new(0, -boxSize/2, 0)   -- Unten
            }
            
            local wallSizes = {
                Vector3.new(boxSize, boxSize, wallThickness),  -- Vorne/Hinten
                Vector3.new(wallThickness, boxSize, boxSize),  -- Rechts/Links
                Vector3.new(boxSize, wallThickness, boxSize)   -- Oben/Unten
            }
            
            -- Erstelle die 6 Wände
            for i = 1, 6 do
                local wall = Instance.new("Part")
                wall.Size = i <= 2 and wallSizes[1] or (i <= 4 and wallSizes[2] or wallSizes[3])
                wall.Position = character.HumanoidRootPart.Position + wallPositions[i]
                wall.Color = boxColor
                wall.Material = Enum.Material.Neon
                wall.Transparency = 1 -- unsichtbar
                wall.Anchored = true
                wall.CanCollide = true  -- KOLLISION AKTIVIERT
                wall.Name = "ProtectionWall_" .. i
                wall.Parent = workspace
                
                table.insert(walls, wall)
            end
            
            -- Box folgt dem Spieler
            local connection
            connection = game:GetService("RunService").Heartbeat:Connect(function()
                if character and character:FindFirstChild("HumanoidRootPart") then
                    local hrp = character.HumanoidRootPart
                    
                    -- Aktualisiere Position aller Wände
                    walls[1].Position = hrp.Position + Vector3.new(0, 0, boxSize/2)   -- Vorne
                    walls[2].Position = hrp.Position + Vector3.new(0, 0, -boxSize/2)  -- Hinten
                    walls[3].Position = hrp.Position + Vector3.new(boxSize/2, 0, 0)   -- Rechts
                    walls[4].Position = hrp.Position + Vector3.new(-boxSize/2, 0, 0)  -- Links
                    walls[5].Position = hrp.Position + Vector3.new(0, boxSize/2, 0)   -- Oben
                    walls[6].Position = hrp.Position + Vector3.new(0, -boxSize/2, 0)  -- Unten
                else
                    if connection then
                        connection:Disconnect()
                    end
                    -- Aufräumen
                    for _, wall in ipairs(walls) do
                        wall:Destroy()
                    end
                end
            end)
            
            -- Cleanup wenn der Spieler stirbt
            if character:FindFirstChild("Humanoid") then
                character.Humanoid.Died:Connect(function()
                    if connection then
                        connection:Disconnect()
                    end
                    for _, wall in ipairs(walls) do
                        wall:Destroy()
                    end
                end)
            end
            
            -- Speichere die Verbindung und Wände für späteren Zugriff
            _G.ProtectionBoxConnection = connection
            _G.ProtectionWalls = walls
            
        else
            -- Entferne alle Wände wenn der Toggle deaktiviert wird
            if _G.ProtectionBoxConnection then
                _G.ProtectionBoxConnection:Disconnect()
            end
            
            if _G.ProtectionWalls then
                for _, wall in ipairs(_G.ProtectionWalls) do
                    if wall then
                        wall:Destroy()
                    end
                end
            end
            
            -- Lösche auch einzelne Wände falls vorhanden
            for i = 1, 6 do
                local wall = workspace:FindFirstChild("ProtectionWall_" .. i)
                if wall then
                    wall:Destroy()
                end
            end
        end
    end
})

local Button = FinalTab:Button({
    Title = "Anti fall",
    Desc = "you cant fall down",
    Locked = false,
    Callback = function()
    
        -- Altes Safe Part entfernen
        local oldPart = workspace:FindFirstChild("antifall platform")
        if oldPart then
            oldPart:Destroy()
        end
        
        -- Neues Safe Part erstellen
        local safePart = Instance.new("Part")
        safePart.Name = "antifall platform"
        safePart.Size = Vector3.new(750, 5, 750)
        safePart.Position = Vector3.new(24, 955, 61)
        safePart.Anchored = true
        safePart.CanCollide = true
        safePart.Parent = workspace
        
        print("✅ Safe platform created")
    end
})

local Button = HideTab:Button({
    Title = "Teleport 100 up",
    Desc = "teleprts you 100 studs up",
    Locked = false,
    Callback = function()
    game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = 
            game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame + Vector3.new(0, 100, 0)
    end
})

local Button = HideTab:Button({
    Title = "Teleport 40 down",
    Desc = "teleports you 40 studs down",
    Locked = false,
    Callback = function()
    game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame = 
            game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart").CFrame + Vector3.new(0, -35, 0)
    end
})

local Button = HideTab:Button({
    Title = "Delete spikes",
    Desc = "The spikes cant kill you anymore",
    Locked = false,
    Callback = function()
        -- Suche nach dem Spike-Objekt
        local hideandseekmapFolder = game.Workspace:FindFirstChild("HideAndSeekMap")
        if hideandseekmapFolder then
            local spikes = hideandseekmapFolder:FindFirstChild("KillingParts")
            if spikes then
                spikes:Destroy()
                print("spikes deleted!")

            else
                print("spikes not found")
            end
        else
            print("hide and seek map not found")
        end
    end
})
